setwd("~/Desktop/master/Financial measure/20171020")
setwd("~/Desktop/master/Financial measure/20171020")
Sys.setlocale(category = "LC_ALL", locale = "English_United States.1252")
setwd("~/Desktop/master/Financial measure/20171020")
temp = read.csv("FF_12Ind.csv", header=TRUE)
head(temp)
temp.ts = ts(temp[,-1],start=c(1926,7),freq=12)
headtemp.ts
head(temp.ts)
myData = timeSeries::as.timeSeries(temp.ts)
head(myData)
library(xts)
head(temp[,-1])
myData_tmp = as.yearmon(temp.ts)
head(myData_tmp)
setwd("~/Desktop/master/Financial measure/20171020")
setwd("~/Desktop/master/Financial measure/20171020")
myData_tmp = as.yearmon(temp[ ,1])
head(myData_tmp)
temp[ m1]
temp[ , 1]
class(temp[ ,1])
head(myData,2);tail(myData,2)
summary(myData)
table1=prettify(summary(myData["Chems",]))
install.packages("papeR")
library(papeR)
library(papeR)
table1=prettify(summary(myData["Chems",]))
table1=prettify(summary(myData["Chems",]))
library(papeR)
??papeR
?papeR
table1=prettify(summary(myData["Chems",]))
save(myData,file="FF_12Ind.RData")
summary(myData)[Chems,]
summary(myData)[Chems]
summary(myData)
summary(myData)[ ,9]
save(myData,file="FF_12Ind.RData")
Input=load("FF_12Ind.RData")
print(Input)
install.packages("fBasics")
library(fBasics)
basicStats(myData[,1:3])
class(myData)
head(myData)
basicStats(myData[,1:2 & 9])
basicStats(myData[,1:3])
basicStats(myData[,1:3])
basicStats(myData[,1:3])["Sum",]
basicStats(myData[,1:3])[9,]
basicStats(myData[,1:3])[,9]
basicStats(myData[,1:3])[,3]
colStats(myData[,1:3],mean)
colMeans(myData[,1:3])
cov(myData[,1:3])
var(myData[,1:3])
cor(myData[,1:3])
FF_1v=lm(Enrgy~Mkt.RF, data=myData)
head(FF_1v)
plot(FF_1v)
confint(FF_1v, level=0.9)
names(summary(output1))
par(mfrow=c(2,2))
plot(FF_1v)
par(mfrow=c(1,1))
names(summary(output1))
FF_1v$coef
names(summary(FF_1v))
FF_1v$coef
summary(FF_1v)$coef
AIC(FF_1v)
BIC(FF_1v)
anova(FF_1v)
RawData=as.data.frame(unclass(myData))
FF_pred=predict(FF_1v, interval="confidence")
with(plot(Enrgy~Mkt.RF),data=RawData)
abline(FF_1v,col="blue")
with(lines(FF_pred[,2]~Mkt.RF, lwd=0.1, lty=4, col=2),data=RawData)
with(lines(FF_pred[,3]~Mkt.RF, lwd=0.1, lty=4, col=2),data=RawData)
legend("topleft", c("regression line", "low", "upper"), lty=c(1,4,4), lwd=0.1, bty="n",col=c("blue","red","red"))
FF_3v=lm(Enrgy~Mkt.RF+SMB+HML, data=myData)
summary(FF_3v, corr =TRUE)
anova(FF_1v, FF_3v)
library(car)
linearHypothesis(FF_3v, "Mkt.RF=0")
linearHypothesis(FF_3v, "SMB+HML=0")
linearHypothesis(FF_3v, c("SMB=0","HML=0"))
library(ellipse)
plot(ellipse(FF_3v,c(2,3)),type="l")
install.packages("ellipse")
library(ellipse)
plot(ellipse(FF_3v,c(2,3)),type="l")
points(coef(FF_3v)[2], coef(FF_3v)[3], pch=13)
abline(v=confint(FF_3v)[2,], lty=2)
abline(h=confint(FF_3v)[3,], lty=2)
lm(Enrgy~Mkt.RF+SMB+I(SMB^2), data=myData)
lm(Enrgy~(Mkt.RF+SMB+HML)^2, data=myData)
lm(Enrgy~Mkt.RF+SMB+I(SMB^2), data=myData)
lm(Enrgy~(Mkt.RF+SMB+HML)^2, data=myData)
lm(Enrgy~I(Mkt.RF+SMB+HML)^2, data=myData)
library(sandwich)
coeftest(FF_3v)
install.packages("sandwich")
library(sandwich)
coeftest(FF_3v)
library(sandwich)
?coeftest
??coeftest
install.packages("IMTest")
library(IMTest)
y
coeftest(FF_3v)
library(IMTest)
coeftest(FF_3v)
??coeftest
library(sandwich)
library(papeR)
prettify(summary(FF_3v))
table3v=prettify(summary(FF_3v))
write.csv(table3v,file="table3v.csv",row.names=FALSE)
library(sandwich)
coeftest(FF_3v)
lm(Enrgy~Mkt.RF+SMB+I(SMB^2), data=myData)
lm(Enrgy~(Mkt.RF+SMB+HML)^2, data=myData)
lm(Enrgy~I(Mkt.RF+SMB+HML)^2, data=myData)
plot(ellipse(FF_3v,c(2,3)),type="l")
library(papeR)
temp = read.csv("FF_12Ind.csv", header=TRUE)
head(temp)
summary(temp)
temp.ts = ts(temp[,-1],start=c(1926,7),freq=12)
myData = timeSeries::as.timeSeries(temp.ts)
head(myData,2);tail(myData,2)
summary(myData)
save(myData,file="FF_12Ind.RData")
Input=load("FF_12Ind.RData")
print(Input)
library(fBasics)
basicStats(myData[,1:3])
basicStats(myData[,1:3])["Sum",]
basicStats(myData[,1:3])[9,]
colStats(myData[,1:3],mean)
colMeans(myData[,1:3])
cov(myData[,1:3])
var(myData[,1:3])
cor(myData[,1:3])
FF_1v=lm(Enrgy~Mkt.RF, data=myData)
summary(FF_1v)
plot(FF_1v)
names(summary(FF_1v))
FF_1v$coef
summary(FF_1v)$coef
AIC(FF_1v)
BIC(FF_1v)
anova(FF_1v)
RawData=as.data.frame(unclass(myData))
FF_pred=predict(FF_1v, interval="confidence")
with(plot(Enrgy~Mkt.RF),data=RawData)
abline(FF_1v,col="blue")
with(lines(FF_pred[,2]~Mkt.RF, lwd=0.1, lty=4, col=2),data=RawData)
with(lines(FF_pred[,3]~Mkt.RF, lwd=0.1, lty=4, col=2),data=RawData)
legend("topleft", c("regression line", "low", "upper"), lty=c(1,4,4), lwd=0.1, bty="n",col=c("blue","red","red"))
FF_3v=lm(Enrgy~Mkt.RF+SMB+HML, data=myData)
summary(FF_3v, corr =TRUE)
anova(FF_1v, FF_3v)
library(car)
linearHypothesis(FF_3v, "Mkt.RF=0")
linearHypothesis(FF_3v, "SMB+HML=0")
linearHypothesis(FF_3v, c("SMB=0","HML=0"))
library(ellipse)
plot(ellipse(FF_3v,c(2,3)),type="l")
points(coef(FF_3v)[2], coef(FF_3v)[3], pch=13)
abline(v=confint(FF_3v)[2,], lty=2)
abline(h=confint(FF_3v)[3,], lty=2)
lm(Enrgy~Mkt.RF+SMB+I(SMB^2), data=myData)
lm(Enrgy~(Mkt.RF+SMB+HML)^2, data=myData)
lm(Enrgy~I(Mkt.RF+SMB+HML)^2, data=myData)
library(sandwich)
coeftest(FF_3v)
coeftest(FF_3v, vcovHC)
coeftest(FF_3v, vcov = vcovHC(FF_3v, type = "HC0"))
library(papeR)
prettify(summary(FF_3v))
table3v=prettify(summary(FF_3v))
write.csv(table3v,file="table3v.csv",row.names=FALSE)
setwd("~/Desktop/master/Financial measure/20170929")
setwd("~/Desktop/master/Financial measure/20171020")
setwd("~/Desktop/master/Financial measure/20171020")
setwd("~/Desktop/master/Financial measure/20171020")
df <- xlsx::read.xlsx("A103230008.xlsx",header = T, sheetIndex = 3)
setwd("~/Desktop/master/Financial measure/20171020")
head(df)
hist(df[ ,2])
setwd("~/Desktop/master/Financial measure/20171020")
library(papeR)
temp = read.csv("FF_12Ind.csv", header=TRUE)
head(temp)
head(temp)
summary(temp)
Chems <- temp[ ,10]
head(Chems)
temp = read.csv("FF_12Ind.csv", header=TRUE)
head(temp)
temp <- cbind(temp[, 1:4], Chems)
head(temp)
temp.ts = ts(temp[,-1],start=c(1926,7),freq=12)
myData = timeSeries::as.timeSeries(temp.ts)
head(myData)
head(myData,2);tail(myData,2)
summary(myData)
write.csv(myData, "summary_mtData.csv")
write.csv(summary(myData), "summary_mtData.csv")
library(papeR)
prettify(summary(myData))
summary(myData)
write.csv(summary(myData), "summary_mtData.csv")
